name: Publish

on:
  release:
    types:
      - created

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      # Check out the repo and set up Python
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Load cached dependencies
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: ${{ runner.os }}-venv-

      - name: Install Dependencies
        run: python -m venv ./.venv && . ./.venv/bin/activate && pip install -r requirements-dev.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      # Publish to PyPI
      - name: Publish to PyPI
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m pip install twine
          python setup.py sdist bdist_wheel
          twine upload dist/* -u __token__ -p $PYPI_TOKEN
