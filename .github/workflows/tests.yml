name: Tests

on:
  - push
  - pull_request

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      # Check out the repo and set up Python
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2

      # Load cached pip dependencies if they exist
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: ${{ runner.os }}-pip

      # Install and run linters
      - run: python -m pip install --upgrade pip
      - run: pip install black flake8
      - run: |
          flake8 . --max-line-length 120 --ignore=E203 --per-file-ignores="__init__.py:F401"
          black . --check --line-length 120

  test:
    needs: linting
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.13"]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      # Check out the repo and set up Python
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Load cached pip dependencies if they exist
      - name: Load cached pip dependencies
        id: cached-pip-dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-cache-${{ runner.os }}-${{ hashFiles('requirements*.txt') }}

      # Install dependencies
      - name: Install dependencies
        if: steps.cached-pip-dependencies.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      # Run test suite
      - name: Run tests
        run: pytest tests/ --exitfirst --verbose --failed-first
