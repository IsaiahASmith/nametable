name: Tests

on:
  - push
  - pull_request

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      # Check out the repo and set up Python
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5

      # Load cached dependencies if they exist
      - name: Load cached dependencies
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
          ${{ runner.os }}-venv-
      
      - name: Install Dependencies
        run: python -m venv ./.venv && . ./.venv/bin/activate && pip install -r requirements-dev.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      # Install and run linters
      - run: |
          flake8 . --max-line-length 120 --ignore=E203 --per-file-ignores="__init__.py:F401"
          black . --check --line-length 120

  test:
    needs: linting
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.13"]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      # Check out the repo and set up Python
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: python -m venv ./.venv && . ./.venv/bin/activate && pip install -r requirements-dev.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      # Run test suite
      - name: Run tests
        run: python -m pytest tests/ --exitfirst --verbose --failed-first
